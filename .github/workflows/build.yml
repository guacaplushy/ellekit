name: CI

env:
  build_cmd: xcodebuild CODE_SIGNING_ALLOWED="NO" CODE_SIGNING_REQUIRED="NO" CODE_SIGN_IDENTITY="" -target

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      
  workflow_dispatch:
  
jobs:
  build:
    name: Build
    runs-on: macos-12
    if: ${{ false }} # The package jobs supersede this

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Select Xcode version (14.1)
        run: |
          sudo xcode-select --switch /Applications/Xcode_14.1.app
      
      - name: Build library
        run: |
          ${{ env.build_cmd }} ellekit
          
          mkdir -p ${{ github.workspace }}/product
          cp -R ${{ github.workspace }}/build/Release/libellekit.dylib ${{ github.workspace }}/product/libellekit.dylib
          
      - name: Upload library to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ellekit-library
          path: ${{ github.workspace }}/product/libellekit.dylib
      
      - name: Build injector
        run: |
          ${{ env.build_cmd }} injector
          
          cp -R ${{ github.workspace }}/build/Release/libinjector.dylib ${{ github.workspace }}/product/libinjector.dylib
          
      - name: Upload injector to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: injector
          path: ${{ github.workspace }}/product/libinjector.dylib
          
      - name: Build loader
        run: |
          ${{ env.build_cmd }} loader
          
          cp -R ${{ github.workspace }}/build/Release/loader ${{ github.workspace }}/product/loader
          
      - name: Upload loader to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: loader
          path: ${{ github.workspace }}/product/loader
          
      - name: Build launchd hook
        run: |
          ${{ env.build_cmd }} launchd
    
          cp -R ${{ github.workspace }}/build/Release/pspawn.dylib ${{ github.workspace }}/product/pspawn.dylib
          
      - name: Upload launchd hook to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pspawn
          path: ${{ github.workspace }}/product/pspawn.dylib
    
  package:
    name: Package
    runs-on: macos-12
    strategy:
      matrix:
        include:
          - name: release
            flags: ""
          - name: release with logs
            flags: "-l"
          - name: debug
            flags: "-c Debug"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Select Xcode version (14.1)
        run: |
          sudo xcode-select --switch /Applications/Xcode_14.1.app

      - name: Bootstrap Procursus
        uses: beerpiss/procursus-action@v2.0.1
        with:
          packages: ldid findutils sed coreutils fakeroot
          cache: true
          cache-path: ~/__cache

      - name: Build ${{ matrix.name }}
        run: |
          ./build.sh ${{ matrix.flags }}
          
      - name: Build ${{ matrix.name }} (rootless)
        run: |
          ./build.sh ${{ matrix.flags }} -r

      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }} package
          path: ${{ github.workspace }}/packages/*.deb
      
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: repo
      - name: Push packages
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          mkdir pool || true
          cp ../packages/*.deb pool/
          git add pool
          git commit -m "Update packages"
          git push
        working-directory: repo